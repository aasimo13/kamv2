#!/bin/bash

# This launcher properly handles macOS app bundle execution from Finder
# Get absolute path to script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
RESOURCES_DIR="$SCRIPT_DIR/../Resources"
APP_DIR="$RESOURCES_DIR/camera_test_suite"

# Ensure we're in the correct working directory
cd "$APP_DIR" || exit 1

# Set up PATH to include Python locations
export PATH="/Library/Frameworks/Python.framework/Versions/3.13/bin:/Library/Frameworks/Python.framework/Versions/Current/bin:/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:$PATH"

# Set PYTHONPATH to include our app directory
export PYTHONPATH="$APP_DIR:$PYTHONPATH"

# Clear environment variables that might interfere with GUI
unset CLAUDECODE CLAUDE_CODE CLAUDE_CODE_SSE_PORT CLAUDE_CODE_ENTRYPOINT

# Find Python executable
for python_candidate in \
    "/Library/Frameworks/Python.framework/Versions/3.13/bin/python3" \
    "/Library/Frameworks/Python.framework/Versions/Current/bin/python3" \
    "/opt/homebrew/bin/python3" \
    "/usr/local/bin/python3" \
    "python3"
do
    if command -v "$python_candidate" >/dev/null 2>&1; then
        PYTHON_CMD="$python_candidate"
        break
    fi
done

# Check if we found Python
if [ -z "$PYTHON_CMD" ]; then
    /usr/bin/osascript -e 'display dialog "Python 3 is required but not found.\n\nPlease install Python 3.13 from python.org" buttons {"OK"} default button "OK" with icon stop'
    exit 1
fi

# Launch the Python app - use exec to run in foreground for proper app bundle behavior
exec "$PYTHON_CMD" "$APP_DIR/main_pyqt6.py" "$@"
